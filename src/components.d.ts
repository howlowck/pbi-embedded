/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface PbiEmbedded {
      'accessToken': string;
      'embedUrl': string;
      'filterPaneEnabled': boolean;
      'id': string;
      'mobile': boolean;
      'navContentPaneEnabled': boolean;
      'onEmbedded': (embeddedEl: any) => void;
      'pageName': string;
    }
  }

  interface HTMLPbiEmbeddedElement extends StencilComponents.PbiEmbedded, HTMLStencilElement {}

  var HTMLPbiEmbeddedElement: {
    prototype: HTMLPbiEmbeddedElement;
    new (): HTMLPbiEmbeddedElement;
  };
  interface HTMLElementTagNameMap {
    'pbi-embedded': HTMLPbiEmbeddedElement;
  }
  interface ElementTagNameMap {
    'pbi-embedded': HTMLPbiEmbeddedElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'pbi-embedded': JSXElements.PbiEmbeddedAttributes;
    }
  }
  namespace JSXElements {
    export interface PbiEmbeddedAttributes extends HTMLAttributes {
      'accessToken'?: string;
      'embedUrl'?: string;
      'filterPaneEnabled'?: boolean;
      'id'?: string;
      'mobile'?: boolean;
      'navContentPaneEnabled'?: boolean;
      'onEmbedded'?: (embeddedEl: any) => void;
      'pageName'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;